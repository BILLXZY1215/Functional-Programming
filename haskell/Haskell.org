#+INCLUDE: ../theme/style.org
#+TITLE: Functional Programming by Example

* Haskell

# <a href="https://www.haskell.org"><img src="images/haskellLogo.png"/></a>

** Overview

 - Pure Functional programming language
 - Strong Static Typed Language
 - Type Inference (The Haskell compiler deduces the types for you).
 - Lazy Evaluation (Delayed evaluation) by default
 - Data Immutability / Haskell has no variables
    * Values can be bound to a name and can only be assigned once.
    * Values can never change.
 - Haskell has not for-loop, while statements.
 - Algebraic Data types
 - Pattern Matching
 - Tail Recursions
 - Compiles to native code.

** Suffixes of file names for Haskell

#+BEGIN_SRC
.hs    Haskell source code; preprocess, compile

.lhs   literate Haskell source; unlit, preprocess, compile

.hi    Interface file; contains information about exported symbols

.hc    intermediate C files

.x_o   way x object files; common ways are: p, u, s

.x_hi  way x interface files
#+END_SRC

** Toolset

|                                    |                                                      |
|------------------------------------|------------------------------------------------------|
| ghc - the Glasgow Haskell Compiler | Transforms Haskell Source code .hs into native code. |
| ghci                               | Haskell Interactive Shell / Interpreter              |
| runghc                             | Haskell Non Interactive Interpreter                  |
| haddock                            | Documentation tool for annotated Haskell source code |
| cabal                              | GHC Haskell Cabal package manager                    |

** Install Haskell Platform

Binaries and Installation files:
    * https://www.haskell.org/platform/
    * [[https://www.haskell.org/platform/linux.html][Haskell for Linux]]

Install Haskell Libraries:

#+BEGIN_SRC
cabal update

cabal install <some package>
#+END_SRC

** GHCI Reference

GHCI Interactive Shell

| Command                                | Description                                                    |
|----------------------------------------+----------------------------------------------------------------|
| :help                                  | Show help                                                      |
| :load [haskell-source.hs] or :l src.hs | Load Haskell source code                                       |
| :reload or :r                          | Reload code after it was edited                                |
| :type [expr]   or :t [expr]            | Show the type of an expression                                 |
| :browse                                | Gives the type signature of all functions in a module          |
| :set +s                                | Print timing/memory stats after each evaluation                |
| :{ [code here ] :}                     | Multiline code                                                 |
| :set prompt ">"                        | Change the prompt to ">"                                       |
| :cd [directory]                        | change the current working directory to [directory]            |
| :! [shell command>]                    | execute the shell command; :! pwd  print the current directory |
| :quit                                  | Quit the interpreter                                           |


See also:

 - [[#ghci-configuration-file][GHCI configuration file]]
 - [[https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/ghci-debugger.html][GHCI Debugger]]
 - [[http://manpages.ubuntu.com/manpages/trusty/man1/ghci.1.html][GHC and GHCI Man Page]]
